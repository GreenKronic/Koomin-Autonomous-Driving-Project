#컬러 이미지를 흑백 이미지와 이진화된 binary 이미지

import cv2

IMG_WIDTH = 640  # 가로 픽셀값
IMG_HEIGHT = 480  # 세로 픽셀값

def main():
    img_width = IMG_WIDTH
    img_height = IMG_HEIGHT

    GREEN = (0, 255, 0)
    RED = (0, 0, 255)
    BLUE = (255, 0, 0)
    YELLOW = (0, 255, 255)

    mat_image_org_color = cv2.imread("/home/pi/Downloads/HancomMDS/AutoCar/lanecolor102.bmp")

    if mat_image_org_color is None:
        print("빈 영상입니다.")
        return -1

    img_width = mat_image_org_color.shape[1]
    img_height = mat_image_org_color.shape[0]

    cv2.namedWindow("Display window", cv2.WINDOW_NORMAL)
    cv2.resizeWindow("Display window", img_width, img_height)
    cv2.moveWindow("Display window", 10, 10)

    cv2.namedWindow("Gray Image window", cv2.WINDOW_NORMAL)
    cv2.resizeWindow("Gray Image window", img_width, img_height)
    cv2.moveWindow("Gray Image window", 700, 10)

    cv2.namedWindow("Binary Image window", cv2.WINDOW_NORMAL)
    cv2.resizeWindow("Binary Image window", img_width, img_height)
    cv2.moveWindow("Binary Image window", 10, 500)

    while True:
        mat_image_org_gray = cv2.cvtColor(mat_image_org_color, cv2.COLOR_RGB2GRAY)  # color to gray conversion

        # cv2.threshold(src, thresh, maxval, type)
        mat_image_binary = cv2.threshold(mat_image_org_gray, 200, 255, cv2.THRESH_BINARY)[1]

        cv2.imshow("Display window", mat_image_org_color)
        cv2.imshow("Gray Image window", mat_image_org_gray)  # 흑백 이미지
        cv2.imshow("Binary Image window", mat_image_binary)  # 이진화 이미지

        if cv2.waitKey(10) > 0:
            break

    cv2.destroyAllWindows()
    return 0

if __name__ == "__main__":
    main()
